events {
    worker_connections 1024;
}

worker_processes 1;

error_log stderr;

http {
    resolver 127.0.0.1 ipv6=off;

    upstream origin {
        server upstream_a:8080;
        server upstream_b:8080;
        server upstream_c:8080 backup;
        keepalive 100;
    }

    lua_shared_dict healthcheck 1m;

    lua_socket_log_errors off;

    init_worker_by_lua_block {
        local hc = require "resty.upstream.healthcheck"

        local ok, err = hc.spawn_checker{
            shm = "healthcheck",
            upstream = "origin",
            type = "http",
            http_req = "GET /status HTTP/1.0\r\nHost: origin.com\r\n\r\n",
            port = 8080,
            interval = 5000,
            timeout = 1000,
            fall = 3,
            rise = 2,
            valid_statuses = {200},
            concurrency = 10
        }

        if not ok then
            ngx.log(ngx.ERR, "failed to spawn health checker: ", err)
            return
        end
    }

    server {
        listen 8080;

        location = /content {
            add_header X-Server $upstream_addr;
            proxy_pass http://origin;
        }

        location = /status {
            access_log off;

            default_type text/plain;
            content_by_lua_block {
                local hc = require "resty.upstream.healthcheck"
                ngx.say("NGINX Worker PID: ", ngx.worker.pid())
                ngx.print(hc.status_page())
            }
        }
    }
}
